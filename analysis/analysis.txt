This is the analysis for Markov Part 2, Fall 2018

Sherry Hu - sxh2

Include your name and net id here. Answer the questions from the assignment 
that are reproduced below

(1) Determine (from running Benchmark.java) how long it takes for 
BaseMarkov to generate 2,000, 4,000, 8,000, 16,000, and 32,000 
random characters using the default file and an order 5 Markov Model. 
Include these timings in your report. 

It takes 0.251, 0.517, 1.001, 1.983, and 4.010 seconds respectively. 

The program also generates 4,096 characters using texts that increase in 
size from 496,768 characters to 4,967,680 characters (10 times the number).  
Do you the timings support the O(NT) analysis for BaseMarkov?

Yes, the timing for 496,768 characters is 0.511 seconds, and the timing for 4,967,680 characters is 
5.439 seconds. We can see that 5.439 is roughly ten times that of 0.511, meaning it takes roughly ten 
times as long for 4,967,680 characters than 496,768 characters. 

(2) Determine (from running Benchmark.java) how long it takes for 
EfficientMarkov to generate 2,000, 4,000, 8,000, 16,000, and 32,000 
random characters using the default file and an order 5 Markov Model. 
Include these timings in your report. 

It takes 0.114, 0.123, 0.118, 0.106, 0.110 seconds respectively. 

The program also generates 4,096 characters using texts that increase in 
size from 496,768 characters to 4,967,680 characters (10 times the number).  
Do you the timings support the O(N+T) analysis for EfficientMarkov?

With 496,768 characters, we get a runtime of 0.094 seconds. With 10 times the number of characters, we
get a runtime of 2.613 seconds. This supports the O(N+T) analysis because T is considered as
constant and 0.094 and 2.613 seconds are very close to each other. (If T is considered constant, O(N+T) 
should be roughly equal to O(N+10T) because constants get dropped).

(3)The tests in the class Benchmark use an order-5 Markov Model. 
Run tests that you think are appropriate to determine if the order of the 
Markov Model has a significant impact on the running time for BaseMarkov. 
Explain your reasoning.

It shouldn't have a significant impact on the running time. Changing the orders from 5, to 50, 
to 500, to 550, the runtimes are 0.108, 0.119, 0.092, and 0.185 seconds respectively for 1000 chars. 
We can see that the times stay roughly the same despite drastic changes in order. 

The above explanation was based on my generated data. However, it could have a significant impact 
on runtime. When order increases, it decreases the number of iterations in the for loop, so it could 
decrease runtime by a significant amount. 
